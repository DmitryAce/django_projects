from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from anime.models import Anime, AnimeComment
import random

User = get_user_model()

# Список типовых комментариев
COMMENTS_POOL = [
    "Отличное аниме!",
    "Мне очень понравился этот сюжет.",
    "Персонажи просто классные!",
    "Рекомендую всем посмотреть!",
    "Не могу дождаться следующего сезона.",
    "Аниме просто супер!",
    "Было интересно, но есть и лучше.",
    "Потрясающая анимация!",
    "Сюжет немного предсказуемый, но всё равно круто.",
    "Мне не понравилось, слишком затянуто.",
    "Отличное аниме! Сюжет захватывающий, а персонажи очень харизматичные.",
    "Мне очень понравился этот сюжет. Каждая серия держит в напряжении, не могу дождаться продолжения!",
    "Персонажи просто классные! Особенно главный герой — его развитие на протяжении всего сериала впечатляет.",
    "Рекомендую всем посмотреть! Это аниме стало для меня настоящим открытием.",
    "Не могу дождаться следующего сезона. Финал был настолько неожиданным, что теперь я в ожидании новых серий.",
    "Аниме просто супер! Великолепная анимация и потрясающая музыка делают его уникальным.",
    "Было интересно, но есть и лучше. Некоторые моменты были предсказуемыми, и это немного разочаровало.",
    "Потрясающая анимация! Каждый кадр — как произведение искусства, но сюжет не всегда удерживает внимание.",
    "Сюжет немного предсказуемый, но всё равно круто. Я получил удовольствие от просмотра, даже несмотря на это.",
    "Мне не понравилось, слишком затянуто. Некоторые эпизоды можно было бы сократить, чтобы сделать историю более динамичной.",
    "Очень сильная эмоциональная составляющая. Я плакал на некоторых сценах. Это аниме оставило след в моем сердце.",
    "Забавное и легкое аниме для вечера. Идеально подходит для расслабления после тяжелого дня.",
    "Мне понравились идеи, заложенные в этом аниме. Оно заставляет задуматься о важных вещах.",
    "Не впечатлило. Я ожидал большего, основываясь на отзывах, но оно не оправдало ожиданий.",
    "Прекрасная история о дружбе и самопознании. Я рекомендую его всем, кто ищет что-то глубокое и трогательное."
]

# python manage.py add_random_comments --comment-chance 0.3
class Command(BaseCommand):
    help = 'Adds random comments for all existing users to all existing anime.'

    def add_arguments(self, parser):
        parser.add_argument(
            '--comment-chance',
            type=float,
            default=0.5,
            help='Chance for a user to leave a comment (default is 0.5)'
        )

    def handle(self, *args, **options):
        comment_chance = options['comment_chance']
        users = User.objects.all()
        animes = Anime.objects.all()

        for user in users:
            for anime in animes:
                # Генерация случайного числа и проверка шанса
                if random.random() < comment_chance:
                    comment_text = random.choice(COMMENTS_POOL)
                    comment, created = AnimeComment.objects.get_or_create(
                        anime=anime, user=user,
                        defaults={'body': comment_text}
                    )
                    if created:
                        self.stdout.write(f"Added comment for {anime.title} by {user.username}: {comment_text}")
                    anime.update_comment()  # Обновляем количество комментариев для аниме
